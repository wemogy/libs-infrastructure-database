name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version to release, e.g. 1.0.0
        type: string
        required: false
      pre-release:
        description: Genereates a Pre-Release when checked
        type: boolean
        required: false
        default: false
  push:
    branches:
      - release

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: "write"
      packages: "write"
    steps:
      - name: Get version for next release
        uses: wemogy/get-release-version-action@v4.3.2
        id: release-version
        if: ${{ github.event.inputs.version == '' }}
        with:
          prefix: v
          create-tag: 'true'
          git-username: wemogy IT
          git-email: it@wemogy.com
          mode: semantic

      - uses: actions/checkout@v4

      # Nuget
      - name: Build .NET
        uses: ./.github/actions/dotnet
        with:
          version: ${{ github.event.inputs.version || steps.release-version.outputs.version }}
          cosmos-connection-string: ${{ secrets.COSMOS_CONNECTION_STRING }}
      - name: Create Nuget package(s)
        run: dotnet pack --configuration Release /p:VersionPrefix=${{ github.event.inputs.version || steps.release-version.outputs.version }}
        working-directory: src
      - name: Publish Nuget package(s)
        run: dotnet nuget push **/**/*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.PUBLIC_NUGET_TOKEN }}
        working-directory: src

      # Update Documentation
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - run: yarn install
        working-directory: docs/public
      - run: yarn build
        working-directory: docs/public
      - run: |
          git config --global user.name $GITHUB_ACTOR
          git config --global user.email $GITHUB_ACTOR@users.noreply.github.com
          yarn deploy --skip-build
        working-directory: docs/public
        env:
          GIT_USER: $GITHUB_ACTOR
          GIT_PASS: ${{ secrets.GITHUB_TOKEN }}

      # GitHub
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Version ${{ github.event.inputs.version || steps.release-version.outputs.version }}
          tag_name: ${{ github.event.inputs.version && format('v{0}', github.event.inputs.version) || steps.release-version.outputs.version-name }}
          prerelease: ${{ github.event.inputs.pre-release || false }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
