"use strict";(self.webpackChunkwemogy=self.webpackChunkwemogy||[]).push([[849],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return y}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=u(t),d=a,y=c["".concat(p,".").concat(d)]||c[d]||g[d]||o;return t?r.createElement(y,i(i({ref:n},l),{},{components:t})):r.createElement(y,i({ref:n},l))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7820:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return i},default:function(){return g},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return u}});var r=t(3117),a=(t(7294),t(3905));const o={},i="Sorting & Pagination",s={unversionedId:"sorting-pagination",id:"sorting-pagination",title:"Sorting & Pagination",description:"The DatabaseRepository methods IterateAsync and QueryAsync support sorting and pagination to allow the user to retrieve a subset of the results.",source:"@site/docs-general/05-sorting-pagination.md",sourceDirName:".",slug:"/sorting-pagination",permalink:"/sorting-pagination",draft:!1,editUrl:"https://github.com/wemogy/libs-infrastructure-database/edit/main/docs-general/05-sorting-pagination.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Multi-Tenancy",permalink:"/multi-tenancy"}},p={},u=[{value:"Sorting",id:"sorting",level:2},{value:"Pagination",id:"pagination",level:2},{value:"Sorting &amp; Pagination",id:"sorting--pagination-1",level:2}],l={toc:u},c="wrapper";function g(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sorting--pagination"},"Sorting & Pagination"),(0,a.kt)("p",null,"The DatabaseRepository methods ",(0,a.kt)("inlineCode",{parentName:"p"},"IterateAsync")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"QueryAsync")," support sorting and pagination to allow the user to retrieve a subset of the results."),(0,a.kt)("h2",{id:"sorting"},"Sorting"),(0,a.kt)("p",null,"The generic ",(0,a.kt)("inlineCode",{parentName:"p"},"Sorting<>")," objects allows you to define a sorting on a given properties (multiple properties helps you e.g. to order first on firstname and for all entities which have the same firstname, you can define that they should be ordered by the id property). The sorting can be ascending or descending."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"var sorting = new Sorting<User>()\n  .OrderBy(x => x.FirstName)\n  .OrderByDescending(x => x.Id);\n\nvar sortedUsers = _userRepository.QueryAsync(\n  x => true,\n  sorting);\n")),(0,a.kt)("h2",{id:"pagination"},"Pagination"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Pagination")," objects allows you to define skip and take values to retrieve a subset of the results."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"var pagination = new Pagination()\n  .Skip(10)\n  .Take(10);\n\nvar pagedUsers = _userRepository.QueryAsync(\n  x => true,\n  pagination);\n")),(0,a.kt)("h2",{id:"sorting--pagination-1"},"Sorting & Pagination"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"IterateAsync")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"QueryAsync")," methods support sorting and pagination. You can combine both to retrieve a subset of the results in a sorted order."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"var sorting = new Sorting<User>()\n  .OrderBy(x => x.FirstName)\n  .OrderByDescending(x => x.Id);\n\nvar pagination = new Pagination()\n  .Skip(10)\n  .Take(10);\n\nvar sortedPagedUsers = _userRepository.QueryAsync(\n  x => true,\n  sorting,\n  pagination);\n")))}g.isMDXComponent=!0}}]);